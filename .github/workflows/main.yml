name: Moodle Plugin CI
on: push
defaults:
  run:
    shell: bash -l {0}
jobs:
  moodle-plugin-ci:
    env:
      IGNORE_PATHS : lrs/vendor

    strategy:
      fail-fast: true
      matrix:
        moodle-version: ['MOODLE_32_STABLE', 'MOODLE_33_STABLE', 'MOODLE_34_STABLE']
        database: ['pgsql', 'mariadb']
        operating-system: [ubuntu-18.04]
        php-versions: ['7.0']
        node-versions: ['8.9']

        exclude:
          - moodle-version: 'MOODLE_34_STABLE'
            php-versions: '7.0'
        include:
          - moodle-version: 'MOODLE_34_STABLE'
            database: 'pgsql'
            operating-system: 'ubuntu-18.04'
            php-versions: '7.2'
            node-versions: '8.9'
          - moodle-version: 'MOODLE_34_STABLE'
            database: 'mariadb'
            operating-system: 'ubuntu-18.04'
            php-versions: '7.2'
            node-versions: '8.9'

    runs-on: ${{ matrix.operating-system }}

    services:
      postgres:
        image: postgres:9.6
        env:
          POSTGRES_USER: 'postgres'
          POSTGRES_HOST_AUTH_METHOD: 'trust'
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
        ports:
          - 5432:5432

      mariadb:
        image: mariadb:10
        env:
          MYSQL_USER: 'root'
          MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
        ports:
          - 3306:3306

    steps:
      - name: Get Postgres Version
        if: ${{ matrix.database == 'pgsql' }}
        run: |
          psql -c 'SELECT version();' -U 'postgres' -h '127.0.0.1'

      - name: Get mariadb Version
        if: ${{ matrix.database == 'mariadb' }}
        run: |
          mysql -u 'root' -h '127.0.0.1' -e 'SELECT VERSION();'

      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: plugin

      - name: Configure Node using NVM
        run: |
          nvm install ${{ matrix.node-versions }}
          nvm use ${{ matrix.node-versions }}
          
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, pgsql, mysqli, zip , gd
          tools: phpunit
          coverage: none

      - name: Install Composer 1.x
        run: |
          # Update composer on 1.x branch
          composer self-update --1
      - name: Deploy moodle-plugin-ci
        run: |
          composer self-update
          composer create-project -n --no-dev --prefer-dist moodlehq/moodle-plugin-ci ci ^3
          # Add dirs to $PATH
          echo $(cd ci/bin; pwd) >> $GITHUB_PATH
          echo $(cd ci/vendor/bin; pwd) >> $GITHUB_PATH
          # PHPUnit depends on en_AU.UTF-8 locale
          sudo locale-gen en_AU.UTF-8
      
      - name: Install Moodle
        run: |
          nvm use ${{ matrix.node-versions }}
          moodle-plugin-ci install -vvv --plugin ./plugin --db-host=127.0.0.1 --node-version=${{ matrix.node-versions }}
        env:
          DB: ${{ matrix.database }}
          MOODLE_BRANCH: ${{ matrix.moodle-version }}
          NODE_VERSION: ${{ matrix.node-versions }}

      - name: phplint
        run: moodle-plugin-ci phplint

      - name: phpcpd
        run: moodle-plugin-ci phpcpd

      - name: phpmd
        run: moodle-plugin-ci phpmd

      - name: codechecker
        run: moodle-plugin-ci codechecker

      - name: validate
        run: moodle-plugin-ci validate

      - name: savepoints
        run: moodle-plugin-ci savepoints

      - name: mustache
        run: moodle-plugin-ci mustache

      - name: grunt
        run: moodle-plugin-ci grunt

      - name: phpunit
        run: moodle-plugin-ci phpunit

      - name: behat
        run: moodle-plugin-ci behat