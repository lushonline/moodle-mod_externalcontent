name: Moodle Plugin CI
on: push
jobs:
  moodle-plugin-ci:
    env:
      IGNORE_PATHS: lrs/vendor

    strategy:
      fail-fast: true
      matrix:
        moodle-version:
          [
            "MOODLE_35_STABLE",
            "MOODLE_37_STABLE",
            "MOODLE_38_STABLE",
            "MOODLE_39_STABLE",
            "MOODLE_310_STABLE",
            "MOODLE_311_STABLE",
          ]
        database: ["pgsql"]
        operating-system: [ubuntu-latest]
        php-versions: ["7.2"]
        node-versions: ["8.9", "14.15.0"]

        exclude:
          - moodle-version: "MOODLE_35_STABLE"
            node-versions: "8.9"
          - moodle-version: "MOODLE_37_STABLE"
            node-versions: "8.9"
          - moodle-version: "MOODLE_38_STABLE"
            node-versions: "8.9"
          - moodle-version: "MOODLE_39_STABLE"
            node-versions: "8.9"
          - moodle-version: "MOODLE_310_STABLE"
            node-versions: "8.9"
          - moodle-version: "MOODLE_311_STABLE"
            node-versions: "8.9"
    runs-on: ${{ matrix.operating-system }}

    services:
      postgres:
        image: postgres:11-alpine
        env:
          POSTGRES_USER: "postgres"
          POSTGRES_HOST_AUTH_METHOD: "trust"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
        ports:
          - 5432:5432

    steps:
      - name: Get Postgres Version
        if: ${{ matrix.database == 'pgsql' }}
        run: |
          psql -c 'SELECT version();' -U 'postgres' -h '127.0.0.1'

      - name: Get mariadb Version
        if: ${{ matrix.database == 'mariadb' }}
        run: |
          mysql -u 'root' -h '127.0.0.1' -e 'SELECT VERSION();'

      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: plugin

      - name: Install node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-versions }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, pgsql, mysqli
          tools: phpunit
          coverage: none

      - name: Update Composer
        run: |
          composer self-update

      - name: Download moodle-plugin-ci
        run: |
          composer create-project -n --no-install --no-scripts --no-dev --prefer-dist moodlehq/moodle-plugin-ci ci ^3

      - name: Determine Composer cache directory
        shell: bash
        run: 'echo "COMPOSER_CACHE_DIR=$(composer config cache-dir -d ci)" >> $GITHUB_ENV'

      - name: Cache dependencies installed with Composer
        uses: actions/cache@v2
        with:
          path: "${{ env.COMPOSER_CACHE_DIR }}"
          key: os-${{ runner.os }}-${{ matrix.node-versions }}-composer-${{ hashFiles('ci/composer.lock') }}
          restore-keys: |
            os-${{ runner.os }}-${{ matrix.node-versions }}-composer-${{ hashFiles('ci/composer.lock') }}

      - name: Install moodle-plugin-ci
        run: |
          composer create-project -d ci
          # Add dirs to $PATH
          echo $(cd ci/bin; pwd) >> $GITHUB_PATH
          echo $(cd ci/vendor/bin; pwd) >> $GITHUB_PATH
          # PHPUnit depends on en_AU.UTF-8 locale
          sudo locale-gen en_AU.UTF-8

      - name: Change node global path
        run: |
          # Change node global install path for CI runner
          mkdir ~/.npm-global
          npm config set prefix '~/.npm-global'
          export PATH=~/.npm-global/bin:$PATH
          source ~/.profile

      - name: Install Moodle
        run: |
          moodle-plugin-ci install -vvv --plugin ./plugin --db-host=127.0.0.1
        env:
          DB: ${{ matrix.database }}
          MOODLE_BRANCH: ${{ matrix.moodle-version }}
          NODE_VERSION: ${{ matrix.node-versions }}

      - name: phplint
        run: moodle-plugin-ci phplint

      - name: phpcpd
        run: moodle-plugin-ci phpcpd

      - name: phpmd
        run: moodle-plugin-ci phpmd

      - name: codechecker
        run: moodle-plugin-ci codechecker

      - name: validate
        run: moodle-plugin-ci validate

      - name: savepoints
        run: moodle-plugin-ci savepoints

      - name: mustache
        run: moodle-plugin-ci mustache

      - name: grunt
        run: moodle-plugin-ci grunt

      - name: phpunit
        run: moodle-plugin-ci phpunit

      - name: behat
        run: moodle-plugin-ci behat
