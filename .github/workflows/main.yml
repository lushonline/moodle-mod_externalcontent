name: Moodle Plugin CI
on: push
jobs:
  moodle-plugin-ci:
    env:
      IGNORE_PATHS: lrs/vendor

    strategy:
      fail-fast: false
      matrix:
        moodle-version: ['MOODLE_35_STABLE', 'MOODLE_36_STABLE', 'MOODLE_37_STABLE', 'MOODLE_38_STABLE', 'MOODLE_39_STABLE', 'MOODLE_310_STABLE', 'MOODLE_311_STABLE']
        database: ['pgsql', 'mariadb']
        operating-system: [ubuntu-18.04]
        php-versions: ['7.2','7.3', '7.4']
        node-versions: ['8.9','14.15.0']

        exclude:
          - moodle-version: 'MOODLE_35_STABLE'
            node-versions: '8.9'
          - moodle-version: 'MOODLE_35_STABLE'
            php-versions: '7.3'
          - moodle-version: 'MOODLE_35_STABLE'
            php-versions: '7.4'
          - moodle-version: 'MOODLE_36_STABLE'
            node-versions: '14.15.0'
          - moodle-version: 'MOODLE_36_STABLE'
            php-versions: '7.4'
          - moodle-version: 'MOODLE_37_STABLE'
            node-versions: '8.9'
          - moodle-version: 'MOODLE_37_STABLE'
            php-versions: '7.4'
          - moodle-version: 'MOODLE_38_STABLE'
            node-versions: '8.9'
          - moodle-version: 'MOODLE_39_STABLE'
            node-versions: '8.9'
          - moodle-version: 'MOODLE_310_STABLE'
            node-versions: '8.9'
          - moodle-version: 'MOODLE_311_STABLE'
            node-versions: '8.9'
    runs-on: ${{ matrix.operating-system }}

    services:
      postgres:
        image: postgres:9.6
        env:
          POSTGRES_USER: 'postgres'
          POSTGRES_HOST_AUTH_METHOD: 'trust'
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
        ports:
          - 5432:5432

      mariadb:
        image: mariadb:10
        env:
          MYSQL_USER: 'root'
          MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
        ports:
          - 3306:3306

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: plugin

      - name: Install node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-versions }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, pgsql, mysqli
          tools: phpunit
          coverage: none

      - name: Update Composer
        run: |
          composer self-update

      - name: Download moodle-plugin-ci
        run: |
          composer create-project -n --no-install --no-dev --prefer-dist moodlehq/moodle-plugin-ci ci ^3

      - name: Determine Composer cache directory
        shell: bash
        run: "echo \"COMPOSER_CACHE_DIR=$(composer config cache-dir -d ci)\" >> $GITHUB_ENV"

      - name: Cache dependencies installed with Composer
        uses: actions/cache@v2
        with:
          path: "${{ env.COMPOSER_CACHE_DIR }}"
          key: os-${{ runner.os }}-${{ matrix.node-versions }}-composer-${{ hashFiles('ci/composer.lock') }}
          restore-keys: |
            os-${{ runner.os }}-${{ matrix.node-versions }}-composer-${{ hashFiles('ci/composer.lock') }}

      - name: Install moodle-plugin-ci
        run: |
          composer install -d ci
          # Add dirs to $PATH
          echo $(cd ci/bin; pwd) >> $GITHUB_PATH
          echo $(cd ci/vendor/bin; pwd) >> $GITHUB_PATH
          # PHPUnit depends on en_AU.UTF-8 locale
          sudo locale-gen en_AU.UTF-8

      - name: phplint
        run: moodle-plugin-ci phplint

      - name: phpcpd
        run: moodle-plugin-ci phpcpd

      - name: phpmd
        run: moodle-plugin-ci phpmd

      - name: codechecker
        run: moodle-plugin-ci codechecker

      - name: validate
        run: moodle-plugin-ci validate

      - name: savepoints
        run: moodle-plugin-ci savepoints

      - name: mustache
        run: moodle-plugin-ci mustache

      - name: grunt
        run: moodle-plugin-ci grunt

      - name: phpunit
        run: moodle-plugin-ci phpunit

      - name: behat
        run: moodle-plugin-ci behat
