name: Moodle Plugin CI
on: [push, pull_request]
defaults:
  run:
    shell: bash -l {0}
jobs:
  moodle-plugin-ci:
    env:
      IGNORE_PATHS: lrs/vendor

    strategy:
      fail-fast: true
      matrix:
        moodle-versions: ["MOODLE_311_STABLE", "MOODLE_400_STABLE"]
        database: ["pgsql", "mariadb"]
        operating-system: [ubuntu-latest]
        php-versions: ["7.3", "7.4", "8.0"]
        node-versions: ["16.14.0"]

    runs-on: ${{ matrix.operating-system }}

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: "postgres"
          POSTGRES_HOST_AUTH_METHOD: "trust"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
        ports:
          - 5432:5432

      mariadb:
        image: mariadb:10
        env:
          MYSQL_USER: "root"
          MYSQL_ALLOW_EMPTY_PASSWORD: "true"
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
        ports:
          - 3306:3306

    steps:
      - name: Display Postgres Version
        if: ${{ matrix.database == 'pgsql' }}
        run: |
          psql -c 'SELECT version();' -U 'postgres' -h '127.0.0.1'

      - name: Display mariadb Version
        if: ${{ matrix.database == 'mariadb' }}
        run: |
          mysql -u 'root' -h '127.0.0.1' -e 'SELECT VERSION();'

      - name: Checkout Plugin
        uses: actions/checkout@v2
        with:
          path: plugin

      - name: Configure Node ${{ matrix.node-versions }} using NVM
        run: |
          nvm install ${{ matrix.node-versions }}
          nvm use ${{ matrix.node-versions }}

      - name: Setup PHP ${{ matrix.php-versions }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, pgsql, mysqli, zip, gd
          ini-values: max_input_vars=5000
          tools: phpunit
          coverage: none

      - name: Downgrade to Composer 1.x
        id: install-composer1
        if: ${{ matrix.moodle-versions == 'MOODLE_32_STABLE' || matrix.moodle-versions == 'MOODLE_33_STABLE' || matrix.moodle-versions == 'MOODLE_34_STABLE' }}
        run: |
          composer self-update --1

      - name: Install moodle-plugin-ci
        run: |
          composer create-project --no-interaction --no-dev --no-progress --prefer-dist moodlehq/moodle-plugin-ci ci ^3
          # Add dirs to $PATH
          echo $(cd ci/bin; pwd) >> $GITHUB_PATH
          echo $(cd ci/vendor/bin; pwd) >> $GITHUB_PATH
          # PHPUnit depends on en_AU.UTF-8 locale
          sudo locale-gen en_AU.UTF-8

      - name: Install Additional Moodle Modules
        run: |
          # List all the additional modules you need to install using
          # https://moodlehq.github.io/moodle-plugin-ci/AddExtraPlugins.html
          # Example below (uncomment obviously):
          # moodle-plugin-ci add-plugin lushonline/moodle-mod_externalcontent
        env:
          DB: ${{ matrix.database }}
          MOODLE_BRANCH: ${{ matrix.moodle-versions }}
          NODE_VERSION: ${{ matrix.node-versions }}

      - name: Install Moodle ${{ matrix.moodle-versions }}
        run: |
          nvm use ${{ matrix.node-versions }}
          moodle-plugin-ci install --plugin ./plugin --db-host=127.0.0.1 --node-version=${{ matrix.node-versions }}
        env:
          DB: ${{ matrix.database }}
          MOODLE_BRANCH: ${{ matrix.moodle-versions }}
          NODE_VERSION: ${{ matrix.node-versions }}

      - name: PHP Lint
        if: ${{ always() }}
        run: moodle-plugin-ci phplint

      - name: PHP Copy/Paste Detector
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ always() }}
        run: moodle-plugin-ci phpcpd

      - name: PHP Mess Detector
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ always() }}
        run: moodle-plugin-ci phpmd

      - name: Moodle Code Checker
        if: ${{ always() }}
        run: moodle-plugin-ci codechecker --max-warnings 0

      - name: Moodle PHPDoc Checker
        if: ${{ always() }}
        run: moodle-plugin-ci phpdoc

      - name: Validating
        if: ${{ always() }}
        run: moodle-plugin-ci validate

      - name: Check upgrade savepoints
        if: ${{ always() }}
        run: moodle-plugin-ci savepoints

      - name: Mustache Lint
        if: ${{ always() }}
        run: moodle-plugin-ci mustache

      - name: Grunt
        if: ${{ always() }}
        run: moodle-plugin-ci grunt --max-lint-warnings 0

      - name: PHPUnit tests
        if: ${{ always() }}
        run: moodle-plugin-ci phpunit --fail-on-warning

      - name: Behat features
        if: ${{ always() }}
        run: moodle-plugin-ci behat --profile chrome
